---

- name: Create restic directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ restic_user }}"
    group: "{{ restic_group }}"
    mode: 0750
  with_items:
    - "{{ restic_etc_dir }}"
    - "{{ restic_ca_dir }}"

- name: Copy custom CA cert
  copy:
    dest: "{{ restic_ca_dir }}/CA.pem"
    content: "{{ restic_ca_cert }}"
    owner: "{{ restic_user }}"
    group: "{{ restic_group }}"
    mode: 0644
  become: true
  when: restic_use_ca_cert

- name: set restic commands flags
  set_fact:
    restic_flags: "{{ restic_flags  + ' --cacert ' + restic_ca_dir + '/CA.pem' }}"
  when: restic_use_ca_cert

- name: Copy restic configuration
  template:
    src: "{{ item.template }}"
    dest: "{{ item.dest }}"
    owner: "{{ restic_user }}"
    group: "{{ restic_group }}"
    mode: 0644
  with_items:
    - template: restic.env.j2
      dest: "{{ restic_service_envfile }}"

- name: Copy restic scripts
  template:
    src: "{{ item.template }}"
    dest: "{{ item.dest }}"
    owner: "{{ restic_user }}"
    group: "{{ restic_group }}"
    mode: 0755
  with_items:
    - template: restic-repo-init.sh.j2
      dest: "{{ restic_etc_dir }}/restic-repo-init.sh"
    - template: restic-backup.sh.j2
      dest: "{{ restic_etc_dir }}/restic-backup.sh"
    - template: restic-repo-clean.sh.j2
      dest: "{{ restic_etc_dir }}/restic-repo-clean.sh"
    - template: restic-wrapper.sh.j2
      dest: "{{ restic_etc_dir }}/restic-wrapper.sh"

- name: Initialize restic repo
  command:
    cmd: "{{ restic_etc_dir }}/restic-repo-init.sh"
  register: restic_init
  changed_when: '"Initializing it...." in restic_init.stdout'
