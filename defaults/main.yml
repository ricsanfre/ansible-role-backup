---
# force restic install even when it is already installed

restic_force_install: false
# restic version
restic_version: 0.12.1

# restic path installation
restic_path: /usr/local/bin/restic
# restic config dir
restic_etc_dir: /etc/restic
# restic CA dir (--caCert option)
restic_ca_dir: "{{ restic_etc_dir }}/ssl"

# restic service env file
restic_service_envfile: "{{ restic_etc_dir }}/restic.conf"

restic_log: /var/log/restic.log

# restic user
restic_user: root
restic_group: root

# restic repository
restic_repository: "/srv/restic_repo"
restic_password: mysupers1cret0

# restic additional environment variables. It depends on the type of backend
restic_environment: []
#  For example for Minio: the following need to be specified.
#  - name: AWS_ACCESS_KEY_ID
#    value: "restic"
#  - name: AWS_SECRET_ACCESS_KEY
#    value: "supers1cret0"

# Use CA SSL certificate to validate connection to S3 storage.
# Needed when self-signed certificates or custom CA certificates are used
restic_use_ca_cert: false
# custom CA certificate content
restic_ca_cert: ""

# restic backup directories
restic_backups_dirs:
  - path: '/etc'
  - path: '/var/log'
  - path: '/root'
    exclude:
      - pattern: '.cache'
      - pattern: '.ignore'

# Restic command additional flags
restic_flags: ""

# Whether to install or not the restic cleaning service (restic check, forget and prune)
restic_clean_service: true
# Data retention  (restic forget --keep-within <keep_within>)
restic_forget_keep_within: 30d

# Backup timer configuration
restic_backup_systemd_timer_on_calender: '*-*-* 03:00:00'
restic_backup_systemd_timer_randomized_delay_sec: 0

# Restic check and purge timer configuration
restic_clean_systemd_timer_on_calender: '*-*-* 06:00:00'
restic_clean_systemd_timer_randomized_delay_sec: 0

# rclone
rclone_install: false

# gclone path installation
rclone_path: /usr/bin/rclone
